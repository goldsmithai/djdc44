**Prompt:**


Write a Python program that reads a JSON file named "transcripts_chunked.json", generates embeddings for each JSON object using the OpenAI API and the `text-embedding-3-small` model, and outputs a new JSON file named "transcripts_embeddings.json".


**Input:**


The input file "transcripts_chunked.json" contains an array of strings, where each string represents a speaker's turn with the corresponding timestamp, as generated by a previous program.


**Output:**


The output file "transcripts_embeddings.json" should contain an array of JSON objects. Each object should have two attributes:


- `"document"`: The original string from the input file.

- `"embedding"`: The embedding generated by the OpenAI API for the corresponding document.


**Requirements:**


- Use the `openai` library to interact with the OpenAI API.

- Assume the environment variable `OPENAI_API_KEY` is already set.

- Use the `text-embedding-3-small` model for generating embeddings.

- The output JSON file should be formatted with proper indentation.


**Example:**


If "transcripts_chunked.json" contains:


```json

[

  "John Doe (2024-10-14 10:00 GMT): Hello everyone.",

  "Jane Smith (2024-10-14 10:00 GMT): Hi John!"

]

```


The program should output a file "transcripts_embeddings.json" similar to:


```json

[

  {

    "document": "John Doe (2024-10-14 10:00 GMT): Hello everyone.",

    "embedding": [0.0123, -0.0456, ..., 0.0789] 

  },

  {

    "document": "Jane Smith (2024-10-14 10:00 GMT): Hi John!",

    "embedding": [-0.0234, 0.0567, ..., -0.0890]

  }

]

```


This prompt clearly defines the input, output, and specific requirements for the program, including the correct embedding model to use (`text-embedding-3-small`). It also provides an example to illustrate the expected behavior.


Be sure to use the latest version of the OpenAI Embeddings API. Here is an example from the latest docs: from openai import OpenAI

client = OpenAI()


response = client.embeddings.create(

    input="Your text string goes here",

    model="text-embedding-3-small"

)


print(response.data[0].embedding)
